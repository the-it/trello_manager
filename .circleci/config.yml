version: 2

references:

python_image: &python_image
  circleci/python:3.7

terraform_image: &terraform_image
  hashicorp/terraform:light

working_directory: &working_directory
  ~/repo

repo_cache_key: &repo_cache_key
  v3-repo-{{ .Branch }}-{{ .Revision }}

# Step to restore repository from cache
restore_repo: &restore_repo
  restore_cache:
    key: *repo_cache_key

save_repo: &save_repo
  save_cache:
    key: *repo_cache_key
    paths:
      - *working_directory

terraform_build: &terraform_build
  run:
    name: terraform build
    command: |
      ./build.sh

install_dep: &install_dep
  run:
    name: Install Alpine dependencies
    command: apk add bash

save_workspace: &save_workspace
  persist_to_workspace:
    root: terraform/zip
    paths:
      - lambda*.zip
      - version.txt

restore_workspace: &restore_workspace
  attach_workspace:
    at: terraform/zip

terraform_plan: &terraform_plan
  run:
    name: terraform plan
    command: |
      ./plan.sh

terraform_apply: &terraform_apply
  run:
    name: terraform apply
    command: |
      ./apply.sh

install_dependencies: &install_dependencies
  run:
    name: install dependencies
    command: |
      python3 -m venv venv
      . venv/bin/activate
      make pip3
      pip list

run_coverage: &run_coverage
  run:
    name: run coverage
    command: |
      . venv/bin/activate
      make coverage

report_codecov: &report_codecov
  run:
    name: report codecov
    command: |
      . venv/bin/activate
      make codecov

show_python_version: &show_python_version
  run:
    name: python version
    command: |
      python --version


# defining the steps for each job

coverage_steps: &coverage_steps
  steps:
    - checkout
    - *restore_repo
    - *install_dependencies
    - *show_python_version
    - *run_coverage
    - *report_codecov
    - *save_repo

build_steps: &build_steps
  steps:
    - *restore_repo
    - *terraform_build
    - *save_workspace

plan_steps: &plan_steps
  steps:
    - *install_dep
    - checkout
    - *restore_workspace
    - *terraform_plan

apply_steps: &apply_steps
  steps:
    - *install_dep
    - checkout
    - *restore_workspace
    - *terraform_apply

# job definitions

jobs:
  coverage:
    docker:
      - image: *python_image
    working_directory: *working_directory
    <<: *coverage_steps

  build:
    docker:
      - image: *python_image
    working_directory: *working_directory
    <<: *build_steps

  plan:
    docker:
      - image: *terraform_image
    working_directory: *working_directory
    <<: *plan_steps

  apply:
    docker:
      - image: *terraform_image
    working_directory: *working_directory
    <<: *apply_steps

# dependencies for the workflow

workflows:
  version: 2
  test and send to cloud:
    jobs:
      - coverage:
          context: trello
      - build:
          context: trello_deploy
          requires:
            - coverage
      - plan:
          context: trello_deploy
          requires:
            - build
      - apply:
          context: trello_deploy
          requires:
            - plan
          filters:
            branches:
              only: master
