version: 2

# define first all the single commands ... for reuse

restore_cache: &restore_cache
  restore_cache:
    keys:
      - v1-dependencies-{{ .Environment.PYTHON_VERSION }}-{{ .Environment.CIRCLE_BRANCH }}-{{ checksum "requirements.txt" }}
      - v1-dependencies-{{ .Environment.PYTHON_VERSION }}-{{ .Environment.CIRCLE_BRANCH }}-
      - v1-dependencies-{{ .Environment.PYTHON_VERSION }}-

save_cache: &save_cache
  save_cache:
    paths:
      - ./venv
    key: v1-dependencies-{{ .Environment.PYTHON_VERSION }}-{{ .Environment.CIRCLE_BRANCH }}-{{ checksum "requirements.txt" }}

install_dependencies: &install_dependencies
  run:
    name: install dependencies
    command: |
      python3 -m venv venv
      . venv/bin/activate
      make pip3
      pip list

run_unittest: &run_unittest
  run:
    name: run unittest
    when: always
    command: |
      . venv/bin/activate
      make unittest

run_coverage: &run_coverage
  run:
    name: run coverage
    command: |
      . venv/bin/activate
      make coverage

report_codecov: &report_codecov
  run:
    name: report codecov
    command: |
      . venv/bin/activate
      codecov -F $PYTHON_VERSION

show_python_version: &show_python_version
  run:
    name: python version
    command: |
      python --version

quality_steps: &quality_steps
  steps:
    - checkout
    - <<: *restore_cache
    - <<: *show_python_version
    - <<: *install_dependencies
    - <<: *save_cache

version_steps: &version_steps
  steps:
    - checkout
    - <<: *restore_cache
    - <<: *show_python_version
    - <<: *install_dependencies
    - <<: *save_cache
    - <<: *run_unittest

coverage_steps: &coverage_steps
  steps:
    - checkout
    - <<: *restore_cache
    - <<: *show_python_version
    - <<: *run_coverage
    - <<: *report_codecov

# job definitions

jobs:
  quality:
    docker:
      - image: circleci/python:3.7
    working_directory: ~/repo
    <<: *quality_steps

  version37:
    docker:
      - image: circleci/python:3.7
    working_directory: ~/repo
    <<: *version_steps

  coverage37:
    docker:
      - image: circleci/python:3.7
    working_directory: ~/repo
    <<: *coverage_steps

# dependencies for the workflow

workflows:
  version: 2
  test-and-quality:
    jobs:
      - quality:
          context: python37
      - version37:
          context: python37
      - coverage37:
          context: python37
          requires:
            - version37
            - quality